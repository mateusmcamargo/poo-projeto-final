import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;

public class FormManage extends javax.swing.JFrame {

    // Creates new singleton form 'FormManage'
    private static FormManage manageInstance;
    public FormManage() {
        initComponents();
        setTitle("Gerenciamento de Computadores");
        setLocationRelativeTo(null);
        updateTable();
        jTableList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    }
    public static FormManage generateInstace() {
        if (manageInstance == null){
            manageInstance = new FormManage();
        }
        return manageInstance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jLabelTitleList = new javax.swing.JLabel();
        jScrollPaneList = new javax.swing.JScrollPane();
        jTableList = new javax.swing.JTable();
        jButtonEdit = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonBenchmark = new javax.swing.JButton();
        jButtonRemove = new javax.swing.JButton();
        jLabelTitleSearch = new javax.swing.JLabel();
        jButtonSearch = new javax.swing.JButton();
        jLabelName = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jScrollPaneSearch = new javax.swing.JScrollPane();
        jTextAreaSearch = new javax.swing.JTextArea();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabelTitleList.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelTitleList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitleList.setText("Lista de Computadores");

        jTableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nome", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneList.setViewportView(jTableList);

        jButtonEdit.setText("Editar");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Atualizar");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonBenchmark.setText("Benchmark");
        jButtonBenchmark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBenchmarkActionPerformed(evt);
            }
        });

        jButtonRemove.setText("Excluir");
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        jLabelTitleSearch.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelTitleSearch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitleSearch.setText("Busca individual");

        jButtonSearch.setText("Buscar");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jLabelName.setText("Nome");

        jTextAreaSearch.setColumns(20);
        jTextAreaSearch.setRows(5);
        jScrollPaneSearch.setViewportView(jTextAreaSearch);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPaneList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabelTitleList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButtonBenchmark)
                        .addGap(29, 29, 29)
                        .addComponent(jButtonRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPaneSearch)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelTitleSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTitleSearch)
                    .addComponent(jLabelTitleList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPaneList, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonEdit)
                            .addComponent(jButtonBenchmark)
                            .addComponent(jButtonRemove))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonUpdate))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSearch)
                            .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPaneSearch)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        editComputer();
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        removeComputer();
    }//GEN-LAST:event_jButtonRemoveActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        if (!BDComputer.computers.isEmpty()) {        
            updateTable();
        } else {
            JOptionPane.showMessageDialog(
                null,
                "Nenhum computador cadastrado",
                "Lista vazia",
                JOptionPane.INFORMATION_MESSAGE
            );
        }
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonBenchmarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBenchmarkActionPerformed
        benchmarkComputer();
    }//GEN-LAST:event_jButtonBenchmarkActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        searchComputer();
    }//GEN-LAST:event_jButtonSearchActionPerformed
 
    // Updates the table to reflect the current list of computers.
    private void updateTable() {
        DefaultTableModel model = (DefaultTableModel) jTableList.getModel();
        model.setRowCount(0);  // Clears the current rows
        for (int i = 0; i < BDComputer.computers.size(); i++) {
            model.addRow(new Object[]{BDComputer.computers.get(i).getName(), BDComputer.computers.get(i).getType()});
        }
    }

    // Prints requested computer data
    private void printComputer(int index) {
        jTextAreaSearch.setText("Nome: " + BDComputer.computers.get(index).getName() + "\n");
        jTextAreaSearch.append("Tipo: "   + BDComputer.computers.get(index).getType() + "\n");
        jTextAreaSearch.append("\n");
        jTextAreaSearch.append("Armazenamento: "   + BDComputer.computers.get(index).getType() + "Gb\n");
        jTextAreaSearch.append("Memória: "               + BDComputer.computers.get(index).getType() + "Gb\n");
        jTextAreaSearch.append("\n");
        jTextAreaSearch.append("CPU:\n");
        jTextAreaSearch.append("Modelo: "         + BDComputer.computers.get(index).getCpu().getModel() + "\n");
        jTextAreaSearch.append("Nécleos: "        + BDComputer.computers.get(index).getCpu().getModel() + "\n");
        jTextAreaSearch.append("Frequência: "   + BDComputer.computers.get(index).getCpu().getModel() + "GHz\n");
         jTextAreaSearch.append("\n");
        jTextAreaSearch.append("GPU:\n");
        jTextAreaSearch.append("Modelo: "         + BDComputer.computers.get(index).getGpu().getModel()        + "\n");
        jTextAreaSearch.append("Memória: "       + BDComputer.computers.get(index).getGpu().getMemory()     + "Gb\n");
        jTextAreaSearch.append("Frequência: "   + BDComputer.computers.get(index).getGpu().getFrequency() + "GHz\n");
        jTextAreaSearch.append("Tipo: "              + BDComputer.computers.get(index).getGpu().getType()          + "\n");
        
        if (BDComputer.computers.get(index).getHasDisplay()) {
            jTextAreaSearch.append("\n");
            jTextAreaSearch.append("DISPLAY:\n");
            jTextAreaSearch.append("Tamanho: "         + BDComputer.computers.get(index).getDisplay().getInches() + "''\n");
            jTextAreaSearch.append("Resolução: "        + BDComputer.computers.get(index).getDisplay().getResolutionX());
            jTextAreaSearch.append(" x "   + BDComputer.computers.get(index).getDisplay().getResolutionY() + "px\n");           
        }
        if (BDComputer.computers.get(index).getHasCamera()) {
            jTextAreaSearch.append("\n");
            jTextAreaSearch.append("CAMERA:\n");
            jTextAreaSearch.append("Resolução: "        + BDComputer.computers.get(index).getCamera().getResolutionX());
            jTextAreaSearch.append(" x "                       + BDComputer.computers.get(index).getCamera().getResolutionY() + "px\n");               
        }
        
        jTextAreaSearch.append("\n");
        if (BDComputer.computers.get(index).getHasMouse()) {
            jTextAreaSearch.append("Possui mouse: sim\n");
        } else {
            jTextAreaSearch.append("Possui mouse: não\n");
        }
        
        if (BDComputer.computers.get(index).getHasKeyboard()) {
            jTextAreaSearch.append("Possui teclado: sim\n");
        } else {
            jTextAreaSearch.append("Possui teclado: não\n");
        }
    }
    
    // Opens the edit form for the selected computer.
    private void editComputer() {
        int selectedRow = jTableList.getSelectedRow();
        if (!BDComputer.computers.isEmpty()) {
            try {
                FormEdit.instance().setVisible(true);  // Opens the edit form
                BDComputer.editIndex = selectedRow;  // Sets the index of the computer to edit
            } catch(IndexOutOfBoundsException e) {
                JOptionPane.showMessageDialog(
                    null, "Selecione um computador.", "Nenhum computador selecionado", JOptionPane.INFORMATION_MESSAGE
                );
            }
        } else {
            JOptionPane.showMessageDialog(
                null, "Nenhum computador cadastrado", "Lista vazia", JOptionPane.INFORMATION_MESSAGE
            );
        }
    }

    // Runs a benchmark for the selected computer and shows the results in a dialog.
    private void benchmarkComputer() {
        int selectedRow = jTableList.getSelectedRow();
        if (!BDComputer.computers.isEmpty()) {
            try {
                Computer c = BDComputer.computers.get(selectedRow);
                JOptionPane.showMessageDialog(
                    null,
                    "Processador: " + c.benchCpu(c.getCpu().getCores(), c.getCpu().getFrequency()) + "\n" +
                    "Placa de vídeo: " + c.benchCpu(c.getGpu().getMemory(), c.getCpu().getFrequency()) + "\n",
                    "Resultado do benchmark", JOptionPane.PLAIN_MESSAGE
                );
            } catch(IndexOutOfBoundsException e) {
                JOptionPane.showMessageDialog(
                    null, "Selecione um computador.", "Nenhum computador selecionado", JOptionPane.INFORMATION_MESSAGE
                );
            }
        } else {
            JOptionPane.showMessageDialog(
                null, "Nenhum computador cadastrado", "Lista vazia", JOptionPane.INFORMATION_MESSAGE
            );
        }
    }

    // Confirms the deletion of the selected computer and removes it from the list.
    private void removeComputer() {
        int selectedRow = jTableList.getSelectedRow();
        if (!BDComputer.computers.isEmpty()) {
            try {
                int ret = JOptionPane.showConfirmDialog(
                    null,
                    "Tem certeza que deseja excluir '" + BDComputer.computers.get(selectedRow).getName() + "'?",
                    "Excluir computador", JOptionPane.YES_NO_OPTION
                );
                if (ret == 0) {
                    BDComputer.computers.remove(selectedRow);  // Removes the selected computer
                    updateTable();  // Updates the table after removal
                }
            } catch(IndexOutOfBoundsException e) {
                JOptionPane.showMessageDialog(
                    null, "Selecione um computador.", "Nenhum computador selecionado", JOptionPane.INFORMATION_MESSAGE
                );
            }
        } else {
            JOptionPane.showMessageDialog(
                null, "Nenhum computador cadastrado", "Lista vazia", JOptionPane.INFORMATION_MESSAGE
            );
        }
    }
    
    // Checks if the computer existis, if it does, lists its attributes
    private void searchComputer() {
        String name = jTextFieldSearch.getText();
        int index;
        if (!BDComputer.computers.isEmpty()) {
            if (!BDComputer.computers.isEmpty()) {
                for (Computer c : BDComputer.computers) {
                    if (c.getName().equals(name)) {
                        index = BDComputer.computers.indexOf(c);
                        printComputer(index);
                        return;
                    }
                }
                JOptionPane.showMessageDialog(
                    null, "Nenhum computador encontrado.", "Erro na pesquisa", JOptionPane.INFORMATION_MESSAGE
                );
            }
        } else {
            JOptionPane.showMessageDialog(
                null, "Nenhum computador cadastrado", "Lista vazia", JOptionPane.INFORMATION_MESSAGE
            );
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBenchmark;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelTitleList;
    private javax.swing.JLabel jLabelTitleSearch;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPaneList;
    private javax.swing.JScrollPane jScrollPaneSearch;
    private javax.swing.JTable jTableList;
    private javax.swing.JTextArea jTextAreaSearch;
    public static javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
}
